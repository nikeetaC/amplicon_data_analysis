library("igraph")
verts <- data.frame(name=c("Bacillus amyloliquefaciens SH20","Bacillus thuringiensis SH24","Streptomyces sp. IA49E","Halomonas sp. BS4","Bacillus circulans","Brevibacterium sp.","Serratia marcescens","Streptomyces sp. B3","Streptomyces sp. MAB36","Pseudomonas aeruginosa","Pseudoxanthomonas sp. G3","Stenotrophomonas maltophilia UCP 1601","Bacillus subtilis BS2","Bacillus sp.","Aspergillus ustus MSF3","Haloarcula sp. D21","Bacillus sp. KCB14S006","Bacillus megaterium","Bacillus licheniformis","Bacillus cereus ND1","Bacillus sp. BS3","Bacillus circulans DMS-2","Bacillus licheniformis NIOT-AMKV06", "Bacillus pseudomycoides OR1","Nesterenkonia sp.","Kocuria marina BS-15","Nocardiopsis alba MSA10","Brevibacterium aureum MSA13","Pediococcus dextrinicus SHU1593","Halovivax sp. A21","Bacillus amyloliquefaciens SH-B74","Paenibacillus polymyxa","Pseudomonas sp. BTN-1","Pseudomonas sp.","Alcanivorax sp.","Marinobacter sp. MCTG107b","Paracoccus marcusii","Bacillus stratophericus","Bacillus sp. CS30","Bacillus siamensis","Bacillus licheniformis NIOT-06","Bacillus pumilus","Rhodococcus sp. PML026","Didemnin","Di-rhamnolipid","Fatty acid derivative","Fengycins","Glycolipid","Glycolipoprotein","Glycoprotein","Iturin","Lichenysin","Lipopeptide","Lipoprotein","Peptidoglycolipid","Plipastatin A1","Polymyxin B fusaricidin B","Rhamnolipid","Sophorolipid","Surfactin","Surfactin–like","Trehalolipid"))
a1 = c("Bacillus amyloliquefaciens SH20","Bacillus thuringiensis SH24","Streptomyces sp. IA49E","Halomonas sp. BS4","Bacillus circulans","Brevibacterium sp.","Serratia marcescens","Streptomyces sp. B3","Streptomyces sp. MAB36","Pseudomonas aeruginosa","Pseudoxanthomonas sp. G3","Stenotrophomonas maltophilia UCP 1601","Bacillus subtilis BS2","Bacillus sp.","Aspergillus ustus MSF3","Haloarcula sp. D21","Bacillus sp. KCB14S006","Bacillus megaterium","Bacillus licheniformis","Bacillus circulans","Bacillus cereus ND1","Bacillus sp. BS3","Bacillus circulans DMS-2","Bacillus licheniformis NIOT-AMKV06", "Bacillus pseudomycoides OR1","Nesterenkonia sp.","Kocuria marina BS-15","Nocardiopsis alba MSA10","Brevibacterium aureum MSA13","Pediococcus dextrinicus SHU1593","Halovivax sp. A21","Bacillus amyloliquefaciens SH-B74","Paenibacillus polymyxa","Pseudomonas aeruginosa","Pseudomonas aeruginosa","Pseudomonas aeruginosa","Pseudomonas sp. BTN-1","Pseudomonas sp.","Alcanivorax sp.","Marinobacter sp. MCTG107b","Paracoccus marcusii","Bacillus stratophericus","Bacillus sp. CS30","Bacillus siamensis","Bacillus licheniformis NIOT-06","Bacillus pumilus","Rhodococcus sp. PML026")
b = c("Didemnin","Didemnin","Di-rhamnolipid","Fatty acid derivative","Fengycins","Glycolipid","Glycolipid","Glycolipid","Glycolipid","Glycolipid","Glycolipid","Glycolipid","Glycolipid","Glycolipid","Glycolipoprotein","Glycoprotein","Iturin","Iturin","Lichenysin","Lipopeptide","Lipopeptide","Lipopeptide","Lipopeptide","Lipopeptide","Lipopeptide","Lipopeptide","Lipopeptide","Lipopeptide","Lipopeptide","Lipoprotein","Peptidoglycolipid","Plipastatin A1","Polymyxin B fusaricidin B","Rhamnolipid","Rhamnolipid","Rhamnolipid","Rhamnolipid","Rhamnolipid","Rhamnolipid","Rhamnolipid","Sophorolipid","Surfactin","Surfactin","Surfactin","Surfactin","Surfactin–like","Trehalolipid")
#count2 = data.frame(b)
edges = data.frame(from=c(a1),to=c(b))
g <- graph.data.frame(edges, directed=TRUE, vertices=verts)
#png("graph.png")
plot(g, edge.arrow.size=.3, vertex.color="red", vertex.size=15, vertex.frame.color="gray", vertex.label.color="black", vertex.label.cex=0.8, vertex.label.dist=0.1, edge.curved=0.2)
g#dev.off()
#png("graph.png")
plot(g, edge.arrow.size=.3, vertex.color="red", vertex.size=15, vertex.frame.color="gray", vertex.label.color="black", vertex.label.cex=0.8, vertex.label.dist=0.1, edge.curved=0.2)
knitr::opts_chunk$set(echo = TRUE)
setwd('/BioVolume/Dropbox/Book_chapter_microbiome_datta_nikki/data/dada2/')
library(dada2)
packageVersion('dada2')
packageVersion("phyloseq")
knitr::opts_chunk$set(echo = TRUE)
library(phyloseq)
setwd('/BioVolume/Dropbox/Book_chapter_microbiome_datta_nikki/data/analysis/')
ps.dada2 <- readRDS(file = '../dada2/ps_dada2.rds')
ps.qiime1 <- readRDS(file = '../qiime1/ps_qiime1.rds')
ps.dada2
ps.qiime1
plot_richness(physeq = ps.dada2,x = 'Days')
plot_richness(physeq = ps.dada2,x = 'Days',color = 'Group')
plot_richness(physeq = ps.dada2,x = 'Days',color = 'group')
head(sample_data(ps.dada2))
plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time')
head(sample_data())
head(sample_data(ps.qiime1))
colnames(sample_data(ps.qiime1))
colnames(sample_data(ps.qiime1)) <- c("BarcodeSequence","Day","FileInput","Group","LinkerPrimerSequence")
sample_data(ps.qiime1)
colnames(sample_data(ps.qiime1)) <- c("BarcodeSequence","Day","FileInput","Time","LinkerPrimerSequence")
sample_data(ps.qiime1)
ps.qiime1
saveRDS(ps.qiime1,file = '../qiime1/ps_qiime1.rds')
# QIIME1
ps.qiime1 <- readRDS(file = '../qiime1/ps_qiime1.rds')
ps.qiime1
plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time')
plot_richness(physeq = ps.qiime1,x = 'Day',color = 'Time')
colnames(sample_data(ps.qiime1)) <- c("BarcodeSequence","Days","FileInput","Time","LinkerPrimerSequence")
saveRDS(ps.qiime1,file = '../qiime1/ps_qiime1.rds')
plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time')
plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time')
plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time')
plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time')
plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time',measures = c('Observed','Chao1'))
plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time',measures = c('Observed','Chao1'))
sample_data(ps.qiime1)$Days
sample_data(ps.qiime1)$Days <- as.numeric(sample_data(ps.qiime1)$Days)
plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time',measures = c('Observed','Chao1'))
estimate_richness(physeq = ps.qiime1,measures = c('Chao1'))
estimate_richness(physeq = ps.dada2,measures = c('Chao1'))
estimate_richness(physeq = ps.qiime1,measures = c('Chao1'))
t <- estimate_richness(physeq = ps.qiime1,measures = c('Chao1'))
library(ggplot2)
merge(t,sample_data(ps.qiime1))
merge(t,sample_data(ps.qiime1),by = 0)
t <- merge(t,sample_data(ps.qiime1),by = 0)
ggplot(data = t,mapping = aes(x = Days,y = Chao1))
ggplot(data = t,mapping = aes(x = Days,y = Chao1)) + geom_point()
plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time')
p1 <- plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time')
p1 <- plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time')
plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time')
knitr::opts_chunk$set(echo = TRUE)
setwd('/BioVolume/Dropbox/Book_chapter_microbiome_datta_nikki/data/analysis/')
library(phyloseq)
# DADA2
ps.dada2 <- readRDS(file = '../dada2/ps_dada2.rds')
ps.dada2
# QIIME1
ps.qiime1 <- readRDS(file = '../qiime1/ps_qiime1.rds')
ps.qiime1
p1 <- plot_richness(physeq = ps,x = 'Days',color = 'Time',measures = c('Observed','Chao1','Shannon'))
library(ggpubr)
p1 <- plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time',measures = c('Observed','Chao1','Shannon'))
print(p1)
p2 <- plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time',measures = c('Observed','Chao1','Shannon'))
print(p2)
library(ggpubr)
ggarrange(p1,p2)
sample_data(ps.qiime1)$Days <- as.numeric(sample_data(ps.qiime1)$Days)
saveRDS(ps.qiime1,file = '../qiime1/ps_qiime1.rds')
# QIIME1
ps.qiime1 <- readRDS(file = '../qiime1/ps_qiime1.rds')
p1 <- plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time',measures = c('Observed','Chao1','Shannon'))
print(p1)
p2 <- plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time',measures = c('Observed','Chao1','Shannon'))
print(p2)
library(ggpubr)
ggarrange(p1,p2)
p1 <- plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time',measures = c('Observed','Chao1','Shannon'))
print(p1)
p2 <- plot_richness(physeq = ps.qiime1,x = 'Days',color = 'Time',measures = c('Observed','Chao1','Shannon'))
print(p2)
ggarrange(p1,p2)
ggarrange(p1,p2)
p1
p2
# Transform data to relative proportions
ps.dada2.prop <- transform_sample_counts(physeq = ps,function(x) x/sum(x))
# Transform data to relative proportions
ps.dada2.prop <- transform_sample_counts(physeq = ps.dada2,function(x) x/sum(x))
ps.qiime1.prop <- transform_sample_counts(ps.qiime1,function(x) x/sum(x))
# Ordination using bray-curtis distance metric
ps.dada2.ord <- ordinate(physeq = ps.dada2.prop,method = 'NMDS',distance = 'bray')
ps.qiime1.ord <- ordinate(physeq = ps.qiime1.prop,method = 'NMDS',distance = 'bray')
# ordination plots
plot_ordination(physeq = ps.dada2.prop,ordination = ps.dada2.ord,color = 'Days',shape = 'Time')
plot_ordination(physeq = ps.dada2.prop,ordination = ps.dada2.ord,color = 'Days',shape = 'Time')
# ordination plots
plot_ordination(physeq = ps.dada2.prop,ordination = ps.dada2.ord,color = 'Time')
plot_ordination(physeq = ps.dada2.prop,ordination = ps.dada2.ord,color = 'Time')
p2 <- plot_ordination(physeq = ps.qiime1.prop,ordination = ps.qiime1.ord,color = 'Time')
print(p1)
print(p1)
print(p2)
# ordination plots
p1 <- plot_ordination(physeq = ps.dada2.prop,ordination = ps.dada2.ord,color = 'Time')
p2 <- plot_ordination(physeq = ps.qiime1.prop,ordination = ps.qiime1.ord,color = 'Time')
p1
p2
# plotting abundance of top20 OTUs/ASVs
top20 <- names(sort(taxa_names(ps.dada2.prop),decreasing = T))[1:20]
ps.dada2.top20 <- prune_taxa(top20,ps.dada2.prop)
plot_bar(physeq = ps.dada2.top20,x = 'Days',fill = 'Family')
plot_bar(physeq = ps.dada2.top20,x = 'Days',fill = 'Family')
ps.dada2.top20
ps.dada2.top20 <- prune_taxa(top20,ps.dada2.prop)
ps.dada2.top20
ps.dada2.prop
top20
# plotting abundance of top20 OTUs/ASVs
top20 <- names(sort(taxa_names(ps.dada2.prop),decreasing = T))[1:20]
ps.dada2.top20 <- prune_taxa(top20,ps.dada2.prop)
ps.dada2.prop
top20
# plotting abundance of top20 OTUs/ASVs
top20 <- names(sort(taxa_sums(ps.dada2.prop),decreasing = T))[1:20]
ps.dada2.top20 <- prune_taxa(top20,ps.dada2.prop)
plot_bar(physeq = ps.dada2.top20,x = 'Days',fill = 'Family')
p1 <- plot_richness(physeq = ps.dada2,x = 'Days',color = 'Time',measures = c('Observed','Chao1','Shannon'))
print(p1)
typeof(sample_data(ps.dada2)$Days)
typeof(sample_data(ps.qiime1)$Days)
top20 <- names(sort(taxa_sums(ps.qiime1.prop),decreasing = T))[1:20]
ps.qiime1.top20 <- prune_taxa(top20,ps.qiime1.prop)
plot_bar(physeq = ps.qiime1.prop,x = 'Days',fill = 'Family')
ps.qiime1.prop
ps.qiime1.top20
tax_table(ps.qiime1.top20)
plot_bar(physeq = ps.qiime1.prop,x = 'Days',fill = 'Rank5')
plot_bar(physeq = ps.qiime1.top20,x = 'Days',fill = 'Rank5')
sample_data(ps.qiime1.top20)$Days <- as.integer(sample_data(ps.qiime1.top20)$Days)
plot_bar(physeq = ps.qiime1.top20,x = 'Days',fill = 'Rank5')
BiocManager::install("ALDEx2")
library(aldex2)
library(ALDEx2)
data(selex)
View(selex)
selex.sub <- selex[1:400,]
conds <- c(rep("NS", 7), rep("S", 7))
x.all <- aldex(reads = selex.sub,conditions = conds,mc.samples = 128,test = 't',effect = T,include.sample.summary = T,verbose = T)
View(x.all)
aldex.plot(x.all, type="MW", test="welch", xlab="Dispersion",
ylab="Difference")
aldex.plot(x.all, type="MA", test="welch", xlab="Dispersion",
ylab="Difference")
View(selex)
x.all[x.all$wi.eBH<=0.05,]
dim(x.all[x.all$wi.eBH<=0.05,])
knitr::opts_chunk$set(echo = TRUE)
setwd('/BioVolume/Dropbox/Book_chapter_microbiome_datta_nikki/data/analysis/')
library(phyloseq)
# DADA2
ps.dada2 <- readRDS(file = '../dada2/ps_dada2.rds')
ps.dada2
# QIIME1
ps.qiime1 <- readRDS(file = '../qiime1/ps_qiime1.rds')
ps.qiime1
otu.tab <- t(otu_table(ps.dada2))
conds <- sample_data(ps.dada2)$Time
x.all <- aldex(reads = otu.tab,conditions = conds)
View(x.all)
x.all <- x.all[x.all$wi.eBH<=0.05,]
# add taxonomy to result table
x.all <- merge(x.all,tax_table(ps.dada2),by=0)
View(x.all)
# plotting abundance of top20 OTUs/ASVs
library(ggplot2)
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = rownames(x.all))) + geom_point()
View(x.all)
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names)) + geom_point()
#plot
ggplot(data = x.all,mapping = aes(x = Row.names,y = diff.btw)) + geom_point()
x.all$Row.names
levels(x.all$Row.names)
x.all[order(x.all$diff.btw,decreasing = T)]
x.all[order(x.all$diff.btw,decreasing = T),]
x.all[order(x.all$diff.btw,decreasing = T),]
#plot
ggplot(data = x.all,mapping = aes(x = Row.names,y = diff.btw)) + geom_point()
x.all$Row.names <- factor(x = x.all$Row.names,levels = x.all$Row.names)
#plot
ggplot(data = x.all,mapping = aes(x = Row.names,y = diff.btw)) + geom_point()
#plot
ggplot(data = x.all,mapping = aes(x = Row.names,y = diff.btw)) + geom_point() + coord_flip()
View(x.all)
x.all[order(x.all$diff.btw,decreasing = T),]
View(x.all)
x.all <- aldex(reads = otu.tab,conditions = conds)
x.all <- x.all[x.all$wi.eBH<=0.05,]
# add taxonomy to result table
x.all <- merge(x.all,tax_table(ps.dada2),by=0)
x.all <- x.all[order(x.all$diff.btw,decreasing = T),]
x.all$Row.names <- factor(x = x.all$Row.names,levels = x.all$Row.names)
#plot
ggplot(data = x.all,mapping = aes(x = Row.names,y = diff.btw)) + geom_point() + coord_flip()
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names)) + geom_point()
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, fill=Family)) + geom_point()
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names)) + geom_point(fill=Family)
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Family)) + geom_point()
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Family)) + geom_point() + scale_colour_brewer(palette = 'Paired')
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Family)) + geom_point() + scale_colour_brewer(palette = 'Set3')
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Family)) + geom_point()
#plot
ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Family)) + geom_point() + xlab('Log2FC') + ylab('ASV')
# QIIME1
otu.tab <- t(otu_table(ps.qiime1))
conds <- sample_data(ps.qiime1)$Time
# Run aldex function
x.all <- aldex(reads = otu.tab,conditions = conds)
ps.qiime1
# QIIME1
otu.tab <- t(otu_table(ps.qiime1))
conds <- sample_data(ps.qiime1)$Time
# Run aldex function
x.all <- aldex(reads = otu.tab,conditions = conds)
dim(otu.tab)
# QIIME1
otu.tab <- otu_table(ps.qiime1)
conds <- sample_data(ps.qiime1)$Time
# Run aldex function
x.all <- aldex(reads = otu.tab,conditions = conds)
# Run aldex function
x.all <- aldex(reads = otu.tab,conditions = conds)
x.all <- x.all[x.all$wi.eBH<=0.05,] # filter significant ASVs
# add taxonomy to result table
x.all <- merge(x.all,tax_table(ps.qiime1),by=0)
x.all <- x.all[order(x.all$diff.btw,decreasing = T),] # sort table by log2FC
x.all$Row.names <- factor(x = x.all$Row.names,levels = x.all$Row.names)
#plot
p2 <- ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Family)) + geom_point() + xlab('Log2FC') + ylab('ASV')
p2
#plot
p2 <- ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Rank5)) + geom_point() + xlab('Log2FC') + ylab('ASV')
p2
p1
library(ALDEx2)
# DADA2
otu.tab <- t(otu_table(ps.dada2))
conds <- sample_data(ps.dada2)$Time
# Run aldex function
x.all <- aldex(reads = otu.tab,conditions = conds)
x.all <- x.all[x.all$wi.eBH<=0.05,] # filter significant ASVs
# add taxonomy to result table
x.all <- merge(x.all,tax_table(ps.dada2),by=0)
x.all <- x.all[order(x.all$diff.btw,decreasing = T),] # sort table by log2FC
x.all$Row.names <- factor(x = x.all$Row.names,levels = x.all$Row.names)
#plot
p1 <- ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Family)) + geom_point() + xlab('Log2FC') + ylab('ASV')
# QIIME1
otu.tab <- otu_table(ps.qiime1)
conds <- sample_data(ps.qiime1)$Time
# Run aldex function
x.all <- aldex(reads = otu.tab,conditions = conds)
x.all <- x.all[x.all$wi.eBH<=0.05,] # filter significant ASVs
# add taxonomy to result table
x.all <- merge(x.all,tax_table(ps.qiime1),by=0)
x.all <- x.all[order(x.all$diff.btw,decreasing = T),] # sort table by log2FC
x.all$Row.names <- factor(x = x.all$Row.names,levels = x.all$Row.names)
#plot
p2 <- ggplot(data = x.all,mapping = aes(x = diff.btw,y = Row.names, color=Rank5)) + geom_point() + xlab('Log2FC') + ylab('OTU')
p1
p2
